{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","country","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","recoverd","url","fetchData","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChar","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","StyleSheet","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7257265b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__x8ieY\",\"card\":\"Cards_card__3dpae\",\"infected\":\"Cards_infected__bvDnc\",\"recoverd\":\"Cards_recoverd__2VIjd\",\"deaths\":\"Cards_deaths__1hNPH\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data:{confirmed, deaths, recovered, lastUpdate}, country}) =>{\r\n\r\n    if(!confirmed){\r\n        return 'Loading....';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of Active cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} md={3} className={cx(styles.card, styles.recoverd)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recvered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths due to Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url;\r\n    if(country){\r\n        changeableURL = `${url}/countries/${country}`;\r\n    }\r\n    \r\n    try{\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } \r\n    catch(error){\r\n        console.log(error);        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n       const { data } = await axios.get(`${url}/daily`);\r\n       \r\n       const modifiedData =  data.map((dailyData)=>({\r\n           confirmed: dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n       }));\r\n       \r\n       return modifiedData;\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country)  => country.name);\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n} ","import React, { useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, deaths, recovered}, country}) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        } \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n            <Line \r\n                data ={{\r\n                    labels: dailyData.map(({ date })=>date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed })=>confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill:true,\r\n                    }, {\r\n                        data: dailyData.map(({ deaths })=>deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.4)',\r\n                        fill:true,\r\n                    }],\r\n                }}\r\n            />) : null\r\n    );\r\n\r\n    const barChar = (\r\n        confirmed\r\n            ?(\r\n                <Bar \r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: {display: false},\r\n                        title: {display: true, text: `Current state in ${country}`},\r\n                    }}\r\n                />\r\n            ) :null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChar :  lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ( { handleCountryChange } ) =>{\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]); \r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);  \r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport image from './images/image.png'; \r\n\r\nclass App extends React.Component\r\n{\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const data = await fetchData();\r\n        this.setState({ data })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);  \r\n        this.setState({ data, country: country });\r\n    }\r\n\r\n    render(){\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={StyleSheet.image} src={image} alt=\"Covid-19\"></img>\r\n                <Cards data={data} country={country}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1MFwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__BiVT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3x1_B\",\"image\":\"App_image__Gk7Nq\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}